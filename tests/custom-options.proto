option (my_file_option) = "Hello world!";


message FileOptions {
  extensions 1000 to max;
}
message MessageOptions {
  extensions 1000 to max;
}
message FieldOptions {
  extensions 1000 to max;
}
message EnumOptions {
  extensions 1000 to max;
}
message EnumValueOptions {
  extensions 1000 to max;
}
message ServiceOptions {
  extensions 1000 to max;
}
message MethodOptions {
  extensions 1000 to max;
}

extend FileOptions {
  optional string my_file_option = 50000;
}
extend MessageOptions {
  optional int32 my_message_option = 50001;
}
extend FieldOptions {
  optional float my_field_option = 50002;
}
extend EnumOptions {
  optional bool my_enum_option = 50003;
}
extend EnumValueOptions {
  optional uint32 my_enum_value_option = 50004;
}
extend ServiceOptions {
  optional MyEnum my_service_option = 50005;
}
extend MethodOptions {
  optional MyMessage my_method_option = 50006;
}

message MyMessage {
  option (my_message_option) = 1234;

  optional int32 foo = 1 [(my_field_option) = 4.5];
  optional string bar = 2;
}

enum MyEnum {
  option (my_enum_option) = true;

  FOO = 1 [(my_enum_value_option) = 321];
  BAR = 2;
}

message RequestType {}
message ResponseType {}

service MyService {
  option (my_service_option) = FOO;

  rpc MyMethod(RequestType) returns(ResponseType) {
    // Note: my_method_option has type MyMessage. We can set each field
    // within it using a separate "option" line.
    option (my_method_option).foo = 567;
    option (my_method_option).bar = "Some string";
  }
}
